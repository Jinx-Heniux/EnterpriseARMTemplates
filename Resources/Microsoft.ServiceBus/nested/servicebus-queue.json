{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "queueName": {
      "type": "string",
      "metadata": {
        "description": "name of the queue."
      }
    },
    "serviceBusNamespaceName": {
      "type": "string",
      "metadata": {
        "description": "name of the existing namespace."
      }
    },
    "defaultMessageTimeToLive": {
      "type": "string",
      "defaultValue": "14.00:00:00",
      "metadata": {
        "description": "Default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
      }
    },
    "queueEnablePartitioning": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "value that indicates whether the queue to be partitioned across multiple message brokers is enabled."
      }
    },
    "queueMaxSizeInMegabytes": {
      "type": "int",
      "defaultValue": 16384,
      "metadata": {
        "description": "the maximum size of the queue in megabytes, which is the size of memory allocated for the queue."
      }
    },
    "queueRequiresDuplicateDetection": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "the value indicating if this queue requires duplicate detection."
      }
    },
   "queueRequiresSession": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "a value that indicates whether the queue supports the concept of session."
      }
    },
    "queueEnableBatchedOperations": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Value that indicates whether server-side batched operations are enabled."
      }
    },
    "queueIsAnonymousAccessible": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Value that indicates whether the message is anonymous accessible."
      }
    },
    "queueSupportOrdering": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Value that indicates whether the topic supports ordering."
      }
    },
    "queueEnableExpress": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "a value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
      }
    },
    "queueDeadLetteringOnMessageExpiration": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Value that indicates if a subscription has dead letter support when a message expires."
      }
    }   
  },
  "variables": {
    "listenSASKeyName": "ListenKey",
    "sendSASKeyName": "SendKey",
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[concat(parameters('serviceBusNamespaceName'), '/',parameters('queueName'))]",
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "location": "[resourcegroup().location]",
      "properties": {
        "path": "[parameters('queueName')]",
        "maxSizeInMegabytes": "[parameters('queueMaxSizeInMegabytes')]",
        "requiresDuplicateDetection": "[parameters('queueRequiresDuplicateDetection')]",
        "requiresSession": "[parameters('queueRequiresSession')]",
        "defaultMessageTimeToLive": "[parameters('defaultMessageTimeToLive')]",
        "deadLetteringOnMessageExpiration": "[parameters('queueDeadLetteringOnMessageExpiration')]",
        "enableBatchedOperations": "[parameters('queueEnableBatchedOperations')]",
        "isAnonymousAccessible": "[parameters('queueIsAnonymousAccessible')]",
        "supportOrdering": "[parameters('queueSupportOrdering')]",
        "enablePartitioning":  "[parameters('queueEnablePartitioning')]",
        "enableExpress": "[parameters('queueEnableExpress')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('sendSASKeyName')]",
      "type": "authorizationRules",
      "dependsOn": [
        "[concat(parameters('serviceBusNamespaceName'),'/',parameters('queueName'))]",
        "[variables('listenSASKeyName')]"
      ],
      "comments": "Dependency needed to other authorizationRule because of exception it cannot find this resourcekey",
      "properties": {
        "rights": [
          "Send"
        ]
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('listenSASKeyName')]",
      "type": "authorizationRules",
      "dependsOn": [
        "[concat(parameters('serviceBusNamespaceName'),'/',parameters('queueName'))]"
      ],
      "properties": {
        "rights": [
          "Listen"
        ]
      }
    }
  ],
  "outputs": {
    "Topic": {
      "type": "object",
      "value": {
        "Name": "[parameters('queueName').name]"
      }
    }
  }
}